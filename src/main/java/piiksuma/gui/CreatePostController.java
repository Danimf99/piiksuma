package piiksuma.gui;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXTextArea;
import javafx.event.Event;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.stage.FileChooser;
import piiksuma.*;
import piiksuma.api.ApiFacade;
import piiksuma.api.MultimediaType;
import piiksuma.exceptions.PiikDatabaseException;
import piiksuma.exceptions.PiikInvalidParameters;

import java.io.File;
import java.net.URI;
import java.net.URL;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.ResourceBundle;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class CreatePostController implements Initializable {

    @FXML
    private JFXButton postButton;

    @FXML
    private JFXTextArea postText;

    @FXML
    private JFXButton multimediaButton;

    @FXML
    private ImageView boxImage;

    private URI imageURI;


    @Override
    public void initialize(URL location, ResourceBundle resources) {
        postButton.setOnAction(this::publishPost);
        multimediaButton.setOnAction(this::handleMultimediaButton);
    }

    private void handleMultimediaButton(Event event) {

        // Creating window to choose image/video
        FileChooser fileChooser = new FileChooser();
        fileChooser.setTitle("Add multimedia");
        File multimedia = fileChooser.showOpenDialog(null);

        // If a file has been chosen
        if (multimedia != null) {
            this.imageURI = multimedia.toURI();
            boxImage.setImage(new Image(multimedia.toURI().toString()));
        }
    }

    private boolean checkEmptyFields() {
        return postText.getText().isEmpty();
    }

    private void publishPost(Event event) {

        // Check if the required data is filled
        if(checkEmptyFields()) {
            return;
        }

        Post result = new Post();

        // Actual user
        // TODO retrieve logged-in user
        User user = new User();
        user.setId("usr1");
        user.setEmail("usr1@gmail.com");
        user.setName("myname");
        user.setPass("pass");
        user.setRegistrationDate(new Timestamp(1));
        user.setBirthday(new Timestamp(1));
        user.setType(UserType.user);
        result.setAuthor(user);

        // ID gets autogenerated

        // Content
        result.setText(postText.getText());

        // Publication date is now by default

        // No father post

        // Hashtags contained
        ArrayList<Hashtag> hashtags = new ArrayList<>();
        Pattern pattern = Pattern.compile("#{1}\\w+");
        Matcher matcher = pattern.matcher(result.getText());

        while(matcher.find()) {
            hashtags.add(new Hashtag(matcher.group()));
        }

        result.setHashtags(hashtags);

        // Multimedia
        if(boxImage.getImage() != null) {
            Multimedia multimedia = new Multimedia();
            System.out.println("entrado");

            multimedia.setUri(imageURI.toASCIIString());
            System.out.println("entrado");

            multimedia.setType(MultimediaType.image);
            System.out.println("entrado");

            StringBuilder resolution = new StringBuilder();
            resolution.append((int)boxImage.getImage().getWidth()).append('x').append((int)boxImage.getImage().getHeight());
            System.out.println(resolution);
            multimedia.setResolution(resolution.toString());
            System.out.println(resolution);
            System.out.println("entrado");

            multimedia.setHash("un_hash");

            result.setMultimedia(multimedia);
        } else {
            System.out.println("no entrado");
        }

        System.out.println("salido");

        // Post gets inserted in the database
        try {
            ApiFacade.getEntrypoint().getInsertionFacade().createPost(result, user);

            // And the window closes
        } catch (PiikDatabaseException e) {
            e.printStackTrace();
        } catch (PiikInvalidParameters piikInvalidParameters) {
            piikInvalidParameters.printStackTrace();
        }
    }
}
